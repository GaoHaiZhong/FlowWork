<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ghz.flow.base.mapper.ApplicationMapper" >
  <resultMap id="BaseResultMap" type="com.ghz.flow.base.pojo.Application" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="applicant" property="applicant" jdbcType="INTEGER" />
    <result column="docFilePath" property="docfilepath" jdbcType="VARCHAR" />
    <result column="applyDate" property="applydate" jdbcType="TIMESTAMP" />
    <result column="rejecttime" property="rejecttime" jdbcType="INTEGER" />
    <result column="againapplytime" property="againapplytime" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="template" property="template" jdbcType="INTEGER" />
    <association property="user" javaType="com.ghz.flow.base.pojo.User">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="loginName" property="loginname" jdbcType="VARCHAR" />
      <result column="password" property="password" jdbcType="VARCHAR" />
    </association>
    <association property="formTemplate" javaType="com.ghz.flow.base.pojo.FormTemplate">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="pdkey" property="pdkey" jdbcType="VARCHAR" />
      <result column="proname" property="proname" jdbcType="VARCHAR" />
      <result column="docpath" property="docpath" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, applicant, docFilePath, applyDate, rejecttime, againapplytime, status, 
    template
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ghz.flow.base.pojo.ApplicationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from application
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from application
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ghz.flow.base.pojo.ApplicationExample" >
    delete from application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ghz.flow.base.pojo.Application" >
    insert into application (id, title, applicant, 
      docFilePath, applyDate, rejecttime, 
      againapplytime, status, template
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{applicant,jdbcType=INTEGER}, 
      #{docfilepath,jdbcType=VARCHAR}, #{applydate,jdbcType=TIMESTAMP}, #{rejecttime,jdbcType=INTEGER}, 
      #{againapplytime,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{template,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ghz.flow.base.pojo.Application" >
    insert into application
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="applicant != null" >
        applicant,
      </if>
      <if test="docfilepath != null" >
        docFilePath,
      </if>
      <if test="applydate != null" >
        applyDate,
      </if>
      <if test="rejecttime != null" >
        rejecttime,
      </if>
      <if test="againapplytime != null" >
        againapplytime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="template != null" >
        template,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="applicant != null" >
        #{applicant,jdbcType=INTEGER},
      </if>
      <if test="docfilepath != null" >
        #{docfilepath,jdbcType=VARCHAR},
      </if>
      <if test="applydate != null" >
        #{applydate,jdbcType=TIMESTAMP},
      </if>
      <if test="rejecttime != null" >
        #{rejecttime,jdbcType=INTEGER},
      </if>
      <if test="againapplytime != null" >
        #{againapplytime,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="template != null" >
        #{template,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ghz.flow.base.pojo.ApplicationExample" resultType="java.lang.Integer" >
    select count(*) from application
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update application
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.applicant != null" >
        applicant = #{record.applicant,jdbcType=INTEGER},
      </if>
      <if test="record.docfilepath != null" >
        docFilePath = #{record.docfilepath,jdbcType=VARCHAR},
      </if>
      <if test="record.applydate != null" >
        applyDate = #{record.applydate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rejecttime != null" >
        rejecttime = #{record.rejecttime,jdbcType=INTEGER},
      </if>
      <if test="record.againapplytime != null" >
        againapplytime = #{record.againapplytime,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.template != null" >
        template = #{record.template,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update application
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      applicant = #{record.applicant,jdbcType=INTEGER},
      docFilePath = #{record.docfilepath,jdbcType=VARCHAR},
      applyDate = #{record.applydate,jdbcType=TIMESTAMP},
      rejecttime = #{record.rejecttime,jdbcType=INTEGER},
      againapplytime = #{record.againapplytime,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      template = #{record.template,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ghz.flow.base.pojo.Application" >
    update application
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="applicant != null" >
        applicant = #{applicant,jdbcType=INTEGER},
      </if>
      <if test="docfilepath != null" >
        docFilePath = #{docfilepath,jdbcType=VARCHAR},
      </if>
      <if test="applydate != null" >
        applyDate = #{applydate,jdbcType=TIMESTAMP},
      </if>
      <if test="rejecttime != null" >
        rejecttime = #{rejecttime,jdbcType=INTEGER},
      </if>
      <if test="againapplytime != null" >
        againapplytime = #{againapplytime,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="template != null" >
        template = #{template,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ghz.flow.base.pojo.Application" >
    update application
    set title = #{title,jdbcType=VARCHAR},
      applicant = #{applicant,jdbcType=INTEGER},
      docFilePath = #{docfilepath,jdbcType=VARCHAR},
      applyDate = #{applydate,jdbcType=TIMESTAMP},
      rejecttime = #{rejecttime,jdbcType=INTEGER},
      againapplytime = #{againapplytime,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      template = #{template,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--查询所有下属的申请-->
  <select id="selectBysubordinates" parameterType="int" resultMap="BaseResultMap">
    SELECT  * from application ap,user u,usercustom us WHERE us.userId =u.id and
    u.id=ap.applicant and us.parentId=#{id}
  </select>

  <insert id="insertAndgetId" parameterType="com.ghz.flow.base.pojo.Application"
          useGeneratedKeys="true" keyProperty="id">
    insert into application ( title, applicant,
    docFilePath, applyDate,rejecttime,againapplytime,status,
    template)
    values ( #{title,jdbcType=VARCHAR}, #{applicant,jdbcType=INTEGER},
    #{docfilepath,jdbcType=VARCHAR}, #{applydate,jdbcType=TIMESTAMP},
    rejecttime = #{rejecttime,jdbcType=INTEGER},
    againapplytime = #{againapplytime,jdbcType=INTEGER},#{status,jdbcType=VARCHAR},
    #{template,jdbcType=INTEGER})
  </insert>
  <!--分页语句的查询-->
  <select id="selectApplicatByPage"  parameterType="java.util.Map" resultMap="BaseResultMap">
     select * from  application ap
    <where>
    <if test="status!=null">
        status=#{status}
    </if>
      AND   applicant =#{userId}
    </where>
    ORDER BY id ASC LIMIT
     <foreach collection="init" item="item" separator=",">
      #{item}
     </foreach>

  </select>

</mapper>