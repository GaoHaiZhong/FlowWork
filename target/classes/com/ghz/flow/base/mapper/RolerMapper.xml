<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ghz.flow.base.mapper.RolerMapper" >
  <resultMap id="BaseResultMap" type="com.ghz.flow.base.pojo.Roler" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="rolername" property="rolername" jdbcType="VARCHAR" />
    <result column="keyname" property="keyname" jdbcType="VARCHAR" />
    <collection property="userList"  ofType="com.ghz.flow.base.pojo.Roler">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="loginName" property="loginname" jdbcType="VARCHAR" />
      <result column="password" property="password" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, rolername, keyname
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ghz.flow.base.pojo.RolerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from roler
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from roler
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from roler
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ghz.flow.base.pojo.RolerExample" >
    delete from roler
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ghz.flow.base.pojo.Roler" >
    insert into roler (id, rolername, keyname
    )
    values (#{id,jdbcType=INTEGER}, #{rolername,jdbcType=VARCHAR}, #{keyname,jdbcType=VARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.ghz.flow.base.pojo.Roler" >
    insert into roler
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="rolername != null" >
        rolername,
      </if>
      <if test="keyname != null" >
        keyname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rolername != null" >
        #{rolername,jdbcType=VARCHAR},
      </if>
      <if test="keyname != null" >
        #{keyname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ghz.flow.base.pojo.RolerExample" resultType="java.lang.Integer" >
    select count(*) from roler
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update roler
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.rolername != null" >
        rolername = #{record.rolername,jdbcType=VARCHAR},
      </if>
      <if test="record.keys != null" >
        keys = #{record.keyname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update roler
    set id = #{record.id,jdbcType=INTEGER},
    rolername = #{record.rolername,jdbcType=VARCHAR},
    keys = #{record.keyname,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ghz.flow.base.pojo.Roler" >
    update roler
    <set >
      <if test="rolername != null" >
        rolername = #{rolername,jdbcType=VARCHAR},
      </if>
      <if test="keyname != null" >
        keys = #{keyname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ghz.flow.base.pojo.Roler" >
    update roler
    set rolername = #{rolername,jdbcType=VARCHAR},
    keyname = #{keyname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByUser"  parameterType="com.ghz.flow.base.pojo.User"  resultMap="BaseResultMap">
   SELECT * from roler r where r.id in(select ul.rolerId from user_link ul WHERE ul.userId=#{id,jdbcType=INTEGER})
  </select>
  <select id="selectAllRoler" resultMap="BaseResultMap">
    select * from roler
  </select>

  <insert id="setRolerByUserId" parameterType="map">
    insert INTO user_link(userId,rolerId) VALUES
    <foreach collection="groups" item="group"    separator=",">
      (#{UserId},#{group})
    </foreach>
  </insert>
  <select id="selectById" parameterType="int" resultMap="BaseResultMap">
     SELECT * from roler r where r.id=#{VALUE}
  </select>

</mapper>